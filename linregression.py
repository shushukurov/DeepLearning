# -*- coding: utf-8 -*-
"""LinRegression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C05F444uvr9tTVRTTmNvq97vy3YZc6zN
"""

import numpy as np

# Weights multiplication 
def forward(x,w):
  return x * w
# RELU activation function
def relu(x):
  return np.maximum(x,0)

def loss(x,w,y):
  pred = x*w
  l = (y - pred) ** 2
  return l
#Gradient calculation
def grad(loss,w):
  d = (2*x)*((x*w)-y)
  return d
#Gradient descent algorithm
def optimize(x,y,w,lr=0.01,epoch=30):
  for i in range(epoch):
    pred = x*w
    loss = ((y - pred) ** 2)
    grad = (2*x)*((x*w)-y)
    w = w - (lr*grad)
    print('epoch ', i,' New loss',(y - pred) ** 2)
    
  return w